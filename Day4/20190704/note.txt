20190704主要讲解知识点：
	1）实时时间的显示。
	2）摄像头的移植。
	
一、实时时间的显示
	1）查看系统时间
		date
	2）通过终端命令修改时间。
		年月日： date -s 2019-7-4
		时分秒： date -s 09:13:30
	3）使用函数进行时间的设置。
		system
		功能：执行终端的shell命令。
		#include <stdlib.h>
		int system(const char *command);
		const char *command：终端的shell命令。
		
		system("date -s 2019-7-4");
		system("date -s 09:13:30");
		
	4）time、ctime	
	man -f time
	man -f ctime
	
	man 3 time
	time - get time
	#include <time.h>
	time_t time(time_t *tloc);
	time_t *tloc：存储获取到的时间的地址。
	返回值：成功：获取到的时间。
	
	ctime
	man 3 ctime
	功能：将time函数获取到的十进制的时间转化成字符串。
	#include <time.h>
	char *ctime(const time_t *timep);
	const time_t *timep：存储十进制的时间地址。
	返回值：成功  返回转化后的时间字符串
	
	//"Wed Jul  3 18:39:17 PDT 2019"
	系统要求时间显示格式：
	09:41:50
	2019-7-4
	
	思路：对"Wed Jul  3 18:39:17 PDT 2019"字符串进行切割与组合。
	切割：strtok
	组合: sprintf
	
	man -f strtok
	#include <string.h>
	char *strtok(char *str, const char *delim);
	char *str：要切割的字符串的地址。
	const char *delim：切割的方式（' '、'-'、'\'、':'……）
	返回值：成功  放回切割后的字符串。	
	
	sprintf
	#include <stdio.h>
	int sprintf(char *str, const char *format, const char *format);
	char *str：拼接后新的字符串存储的地址。
	const char *format：拼接的字符串1.
	const char *format：拼接的字符串2.
	
	4）使用字库显示时间到LCD屏幕上。
		举例：参考font文件夹中的程序
		arm-linux-gcc main.c -o armmain -L./ -lfont
		
	在Linux系统中有静态库(.a)和动态库(.so)
	libfont.a   --->静态库
	库的命名规则：前缀+库名称+后缀
	前缀：lib
	库名称:font
	后缀：.a
	
	练习10：
		实时显示时间在LCD屏幕上。
		10:49:51
		2019-7-4
		
二、头文件的制作。
	函数的定义、调用及声明。
	1）创建一个main.c程序，将具体某一个功能进行函数封装。
	2）分别在创建两个文件。（同名不同格式的文件.c/.h）
	3）将函数的定义放到.c文件中，将函数的声明和函数用到的头文件放到.h文件中。
	
	注意：编译时需要一起编译所有.c文件。
	
	练习11：
		根据bmp文件夹制作touch_screen.h和touch_screen.c的头文件，在main.c文件中调用，实现坐标的连续获取。
		
三、摄像头的移植。
	1）查看摄像头的设备文件。
		1）不插摄像头，切换路径到/dev/目录中
		cd /dev/
		ls
		
			video0
			video1
			video2
			video3
			video4
			video5
			video6	
		2）插摄像头，切换路径到/dev/目录中
			video0
			video1
			video2
			video3
			video4
			video5
			video6	
			video7
			通过比较确认设备文件路径:/dev/video7
		3）	更改camera.c中的设备路径。
		4）编译程序。
			arm-linux-gcc *.c -o armmain -I./jpeg -L./jpeg -ljpeg -lapi_v4l2_arm -pthread
		5）用U盘下载libapi_v4l2_arm.so、libjpeg.so、 libjpeg.so.8.3.0到/root/project/lib	
		6）复制libapi_v4l2_arm.so、libjpeg.so、 libjpeg.so.8.3.0到/lib/	
		
四、整体系统的优化与移植
	用到的库
		libfont.a
		libapi_v4l2_arm.so
		libjpeg.so
	总的编译命令：
	arm-linux-gcc *.c -o armmain -I./jpeg -L./jpeg -ljpeg -lapi_v4l2_arm -L./ -lfont -pthread
	
	最好建一个文件夹project_v1
	project_v2
	……
	
	
	